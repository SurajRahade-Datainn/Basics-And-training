1. docker images (to list down the images which are already present in the current directory. If it is not present in the current directory then we need to pull the image)

2. docker pull mysql (If it is not present in the current directory)

3. docker ps (It shows the containers in running state)

4. docker ps -a (It displays the containers in running and which are stopped state)

5. docker run --name mysql-Utkarsha --network simplevat-bridge-network -e MYSQL_ROOT_PASSWORD=password -d mysql/mysql-server:latest
  (It will create the container)

6. docker exec -it mysql-Utkarsha mysql -uroot -p (It will connect to mysql console)

-->For mysql database -

1. show databases; (It will display all the databases)
2. create database simplevat_db_utkarsha (To create database)
3. CREATE USER 'Utkarshauser'@'%' IDENTIFIED WITH mysql_native_password BY 'password'; (To create user)
4. grant all privileges on simplevat_db_utkarsha.* to 'Utkarshauser'@'%'; (It will grant privileges db to user)
5. flush privileges; (To tell the server to reload the grant tables)


7. docker run -p 9098:8080 --env SIMPLEVAT_DB_HOST=mysql-Utkarsha --env SIMPLEVAT_DB=simplevat_db_utkarsha --env SIMPLEVAT_DB_USER=Utkarshauser --env SIMPLEVAT_DB_
PASSWORD=password --env SIMPLEVAT_HOST=http://simplevat-Utkarsha:9098/ --name simplevat-Utkarsha --network simplevat-bridge-network simplevat:latest 
(When you are going to host some application you are going to store the data. For storing the data we are setting some environment variables i.e, we are giving the host name of mysql server, mentioning in which db you are going to store the data and for accessing
the db through which user you are going to access db and the password for that user. Using all these environment variables you will get the db connection. And it will go to bridge network.)

8. docker kill simplevat-Utkarsha && docker rm simplevat-Utkarsha (To remove the container.)

9. docker run -it --name busybox --network simplevat-bridge-network  busybox bash
